/Users/wengxk/Library/Java/JavaVirtualMachines/corretto-17.0.16/Contents/Home/bin/java -Dmaven.multiModuleProjectDirectory=/Users/wengxk/Documents/springboot/real-time-balance-calculation -Djansi.passthrough=true -Dmaven.home=/Applications/IntelliJ IDEA 2.app/Contents/plugins/maven/lib/maven3 -Dclassworlds.conf=/Applications/IntelliJ IDEA 2.app/Contents/plugins/maven/lib/maven3/bin/m2.conf -Dmaven.ext.class.path=/Applications/IntelliJ IDEA 2.app/Contents/plugins/maven/lib/maven-event-listener.jar -javaagent:/Applications/IntelliJ IDEA 2.app/Contents/lib/idea_rt.jar=64190:/Applications/IntelliJ IDEA 2.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Applications/IntelliJ IDEA 2.app/Contents/plugins/maven/lib/maven3/boot/plexus-classworlds.license:/Applications/IntelliJ IDEA 2.app/Contents/plugins/maven/lib/maven3/boot/plexus-classworlds-2.7.0.jar org.codehaus.classworlds.Launcher -Didea.version=2024.1.2 test jacoco:report
[INFO] Scanning for projects...
[WARNING]
[WARNING] Some problems were encountered while building the effective model for sacred:balance-system:jar:1.0.0
[WARNING] 'dependencies.dependency.(groupId:artifactId:type:classifier)' must be unique: org.projectlombok:lombok:jar -> version 1.18.34 vs (?) @ line 79, column 21
[WARNING] 'dependencies.dependency.(groupId:artifactId:type:classifier)' must be unique: org.projectlombok:lombok:jar -> version 1.18.34 vs (?) @ line 84, column 21
[WARNING]
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING]
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING]
[INFO]
[INFO] -----------------------< sacred:balance-system >------------------------
[INFO] Building balance-system 1.0.0
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO]
[INFO] --- jacoco:0.8.7:prepare-agent (default) @ balance-system ---
[INFO] argLine set to -javaagent:/Users/wengxk/.m2/repository/org/jacoco/org.jacoco.agent/0.8.7/org.jacoco.agent-0.8.7-runtime.jar=destfile=/Users/wengxk/Documents/springboot/real-time-balance-calculation/target/jacoco.exec
[INFO]
[INFO] --- resources:3.3.1:resources (default-resources) @ balance-system ---
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO]
[INFO] --- compiler:3.11.0:compile (default-compile) @ balance-system ---
[INFO] Nothing to compile - all classes are up to date
[INFO]
[INFO] --- resources:3.3.1:testResources (default-testResources) @ balance-system ---
[INFO] skip non existing resourceDirectory /Users/wengxk/Documents/springboot/real-time-balance-calculation/src/test/resources
[INFO]
[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ balance-system ---
[INFO] Nothing to compile - all classes are up to date
[INFO]
[INFO] --- surefire:3.1.2:test (default-test) @ balance-system ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO]
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running com.sacred.balance.service.TransactionRecoveryServiceTest
21:18:53,479 |-INFO in ch.qos.logback.classic.LoggerContext[default] - This is logback-classic version 1.4.11
21:18:53,503 |-INFO in ch.qos.logback.classic.util.ContextInitializer@a64e035 - Here is a list of configurators discovered as a service, by rank:
21:18:53,503 |-INFO in ch.qos.logback.classic.util.ContextInitializer@a64e035 -   org.springframework.boot.logging.logback.RootLogLevelConfigurator
21:18:53,503 |-INFO in ch.qos.logback.classic.util.ContextInitializer@a64e035 - They will be invoked in order until ExecutionStatus.DO_NOT_INVOKE_NEXT_IF_ANY is returned.
21:18:53,503 |-INFO in ch.qos.logback.classic.util.ContextInitializer@a64e035 - Constructed configurator of type class org.springframework.boot.logging.logback.RootLogLevelConfigurator
21:18:53,533 |-INFO in ch.qos.logback.classic.util.ContextInitializer@a64e035 - org.springframework.boot.logging.logback.RootLogLevelConfigurator.configure() call lasted 1 milliseconds. ExecutionStatus=INVOKE_NEXT_IF_ANY
21:18:53,533 |-INFO in ch.qos.logback.classic.util.ContextInitializer@a64e035 - Trying to configure with ch.qos.logback.classic.joran.SerializedModelConfigurator
21:18:53,539 |-INFO in ch.qos.logback.classic.util.ContextInitializer@a64e035 - Constructed configurator of type class ch.qos.logback.classic.joran.SerializedModelConfigurator
21:18:53,613 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.scmo]
21:18:53,614 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.scmo]
21:18:53,614 |-INFO in ch.qos.logback.classic.util.ContextInitializer@a64e035 - ch.qos.logback.classic.joran.SerializedModelConfigurator.configure() call lasted 75 milliseconds. ExecutionStatus=INVOKE_NEXT_IF_ANY
21:18:53,614 |-INFO in ch.qos.logback.classic.util.ContextInitializer@a64e035 - Trying to configure with ch.qos.logback.classic.util.DefaultJoranConfigurator
21:18:53,616 |-INFO in ch.qos.logback.classic.util.ContextInitializer@a64e035 - Constructed configurator of type class ch.qos.logback.classic.util.DefaultJoranConfigurator
21:18:53,617 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml]
21:18:53,626 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [file:/Users/wengxk/Documents/springboot/real-time-balance-calculation/target/classes/logback.xml]
21:18:54,117 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - Processing appender named [CONSOLE]
21:18:54,117 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
21:18:54,158 |-INFO in ch.qos.logback.core.model.processor.ImplicitModelHandler - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
21:18:54,965 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - Processing appender named [FILE]
21:18:54,965 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - About to instantiate appender of type [ch.qos.logback.core.rolling.RollingFileAppender]
21:18:55,121 |-INFO in c.q.l.core.rolling.TimeBasedRollingPolicy@1299497914 - No compression will be used
21:18:55,128 |-INFO in c.q.l.core.rolling.TimeBasedRollingPolicy@1299497914 - Will use the pattern logs/application.%d{yyyy-MM-dd}.%i.log for the active file
21:18:55,303 |-INFO in ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP@41c204a0 - The date pattern is 'yyyy-MM-dd' from file name pattern 'logs/application.%d{yyyy-MM-dd}.%i.log'.
21:18:55,303 |-INFO in ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP@41c204a0 - Roll-over at midnight.
21:18:55,430 |-INFO in ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP@41c204a0 - Setting initial period to 2025-09-05T13:18:09.037Z
21:18:55,432 |-WARN in ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP@41c204a0 - SizeAndTimeBasedFNATP is deprecated. Use SizeAndTimeBasedRollingPolicy instead
21:18:55,432 |-WARN in ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP@41c204a0 - For more information see http://logback.qos.ch/manual/appenders.html#SizeAndTimeBasedRollingPolicy
21:18:55,451 |-INFO in ch.qos.logback.core.model.processor.ImplicitModelHandler - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
21:18:55,479 |-INFO in ch.qos.logback.core.rolling.RollingFileAppender[FILE] - Active log file name: logs/application.log
21:18:55,479 |-INFO in ch.qos.logback.core.rolling.RollingFileAppender[FILE] - File property is set to [logs/application.log]
21:18:55,487 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - Processing appender named [ASYNC_FILE]
21:18:55,487 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - About to instantiate appender of type [ch.qos.logback.classic.AsyncAppender]
21:18:55,513 |-INFO in ch.qos.logback.core.model.processor.AppenderRefModelHandler - Attaching appender named [FILE] to ch.qos.logback.classic.AsyncAppender[ASYNC_FILE]
21:18:55,513 |-INFO in ch.qos.logback.classic.AsyncAppender[ASYNC_FILE] - Attaching appender named [FILE] to AsyncAppender.
21:18:55,629 |-INFO in ch.qos.logback.classic.AsyncAppender[ASYNC_FILE] - Setting discardingThreshold to 0
21:18:55,635 |-INFO in ch.qos.logback.classic.model.processor.LoggerModelHandler - Setting level of logger [com.sacred.balance] to DEBUG
21:18:55,639 |-INFO in ch.qos.logback.classic.model.processor.LoggerModelHandler - Setting additivity of logger [com.sacred.balance] to false
21:18:55,644 |-INFO in ch.qos.logback.core.model.processor.AppenderRefModelHandler - Attaching appender named [CONSOLE] to Logger[com.sacred.balance]
21:18:55,644 |-INFO in ch.qos.logback.core.model.processor.AppenderRefModelHandler - Attaching appender named [ASYNC_FILE] to Logger[com.sacred.balance]
21:18:55,645 |-INFO in ch.qos.logback.classic.model.processor.RootLoggerModelHandler - Setting level of ROOT logger to INFO
21:18:55,645 |-INFO in ch.qos.logback.core.model.processor.AppenderRefModelHandler - Attaching appender named [CONSOLE] to Logger[ROOT]
21:18:55,645 |-INFO in ch.qos.logback.core.model.processor.AppenderRefModelHandler - Attaching appender named [ASYNC_FILE] to Logger[ROOT]
21:18:55,645 |-INFO in ch.qos.logback.core.model.processor.DefaultProcessor@64138b0c - End of configuration.
21:18:55,663 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@49dbaaf3 - Registering current configuration as safe fallback point
21:18:55,663 |-INFO in ch.qos.logback.classic.util.ContextInitializer@a64e035 - ch.qos.logback.classic.util.DefaultJoranConfigurator.configure() call lasted 2047 milliseconds. ExecutionStatus=DO_NOT_INVOKE_NEXT_IF_ANY

21:18:59,432 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - Processing appender named [CONSOLE]
21:18:59,432 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
21:18:59,433 |-INFO in ch.qos.logback.core.model.processor.ImplicitModelHandler - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
21:18:59,434 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - Processing appender named [FILE]
21:18:59,434 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - About to instantiate appender of type [ch.qos.logback.core.rolling.RollingFileAppender]
21:18:59,435 |-INFO in c.q.l.core.rolling.TimeBasedRollingPolicy@1223820621 - No compression will be used
21:18:59,435 |-INFO in c.q.l.core.rolling.TimeBasedRollingPolicy@1223820621 - Will use the pattern logs/application.%d{yyyy-MM-dd}.%i.log for the active file
21:18:59,436 |-INFO in ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP@4b3a01d8 - The date pattern is 'yyyy-MM-dd' from file name pattern 'logs/application.%d{yyyy-MM-dd}.%i.log'.
21:18:59,436 |-INFO in ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP@4b3a01d8 - Roll-over at midnight.
21:18:59,437 |-INFO in ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP@4b3a01d8 - Setting initial period to 2025-09-05T13:18:09.037Z
21:18:59,437 |-WARN in ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP@4b3a01d8 - SizeAndTimeBasedFNATP is deprecated. Use SizeAndTimeBasedRollingPolicy instead
21:18:59,437 |-WARN in ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP@4b3a01d8 - For more information see http://logback.qos.ch/manual/appenders.html#SizeAndTimeBasedRollingPolicy
21:18:59,438 |-INFO in ch.qos.logback.core.model.processor.ImplicitModelHandler - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
21:18:59,438 |-INFO in ch.qos.logback.core.rolling.RollingFileAppender[FILE] - Active log file name: logs/application.log
21:18:59,438 |-INFO in ch.qos.logback.core.rolling.RollingFileAppender[FILE] - File property is set to [logs/application.log]
21:18:59,438 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - Processing appender named [ASYNC_FILE]
21:18:59,438 |-INFO in ch.qos.logback.core.model.processor.AppenderModelHandler - About to instantiate appender of type [ch.qos.logback.classic.AsyncAppender]
21:18:59,439 |-INFO in ch.qos.logback.core.model.processor.AppenderRefModelHandler - Attaching appender named [FILE] to ch.qos.logback.classic.AsyncAppender[ASYNC_FILE]
21:18:59,439 |-INFO in ch.qos.logback.classic.AsyncAppender[ASYNC_FILE] - Attaching appender named [FILE] to AsyncAppender.
21:18:59,439 |-INFO in ch.qos.logback.classic.AsyncAppender[ASYNC_FILE] - Setting discardingThreshold to 0
21:18:59,439 |-INFO in ch.qos.logback.classic.model.processor.LoggerModelHandler - Setting level of logger [com.sacred.balance] to DEBUG
21:18:59,439 |-INFO in ch.qos.logback.classic.jul.LevelChangePropagator@19fbc594 - Propagating DEBUG level on Logger[com.sacred.balance] onto the JUL framework
21:18:59,441 |-INFO in ch.qos.logback.classic.model.processor.LoggerModelHandler - Setting additivity of logger [com.sacred.balance] to false
21:18:59,441 |-INFO in ch.qos.logback.core.model.processor.AppenderRefModelHandler - Attaching appender named [CONSOLE] to Logger[com.sacred.balance]
21:18:59,441 |-INFO in ch.qos.logback.core.model.processor.AppenderRefModelHandler - Attaching appender named [ASYNC_FILE] to Logger[com.sacred.balance]
21:18:59,441 |-INFO in ch.qos.logback.classic.model.processor.RootLoggerModelHandler - Setting level of ROOT logger to INFO
21:18:59,441 |-INFO in ch.qos.logback.classic.jul.LevelChangePropagator@19fbc594 - Propagating INFO level on Logger[ROOT] onto the JUL framework
21:18:59,441 |-INFO in ch.qos.logback.core.model.processor.AppenderRefModelHandler - Attaching appender named [CONSOLE] to Logger[ROOT]
21:18:59,441 |-INFO in ch.qos.logback.core.model.processor.AppenderRefModelHandler - Attaching appender named [ASYNC_FILE] to Logger[ROOT]
21:18:59,441 |-INFO in ch.qos.logback.core.model.processor.DefaultProcessor@2f4d32bf - End of configuration.
21:18:59,441 |-INFO in org.springframework.boot.logging.logback.SpringBootJoranConfigurator@774d8276 - Registering current configuration as safe fallback point


  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.0)

2025-09-05 21:18:59.712 [main] INFO  c.s.b.s.TransactionRecoveryServiceTest - Starting TransactionRecoveryServiceTest using Java 17.0.16 with PID 56595 (started by wengxk in /Users/wengxk/Documents/springboot/real-time-balance-calculation)
2025-09-05 21:18:59.715 [main] DEBUG c.s.b.s.TransactionRecoveryServiceTest - Running with Spring Boot v3.2.0, Spring v6.1.1
2025-09-05 21:18:59.716 [main] INFO  c.s.b.s.TransactionRecoveryServiceTest - No active profile set, falling back to 1 default profile: "default"
2025-09-05 21:19:04.403 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-09-05 21:19:04.438 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-05 21:19:05.239 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 771 ms. Found 2 JPA repository interfaces.
2025-09-05 21:19:05.283 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-09-05 21:19:05.287 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-09-05 21:19:05.323 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.sacred.balance.repository.AccountRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-05 21:19:05.324 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.sacred.balance.repository.TransactionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-05 21:19:05.324 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-09-05 21:19:08.556 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-05 21:19:08.733 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-09-05 21:19:08.868 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-05 21:19:09.643 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-05 21:19:09.710 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-05 21:19:10.539 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=POSTGRES
2025-09-05 21:19:10.543 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-05 21:19:10.656 [main] WARN  org.hibernate.dialect.Dialect - HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 11.0.0. Check the community dialects project for available legacy versions.
2025-09-05 21:19:10.669 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-05 21:19:13.082 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate:
    drop table if exists accounts cascade
Hibernate:
    drop table if exists transactions cascade
Hibernate:
    create table accounts (
        balance float(53),
        id bigserial not null,
        account_number varchar(255) unique,
        primary key (id)
    )
Hibernate:
    create table transactions (
        amount float(53),
        id bigserial not null,
        timestamp timestamp(6),
        destination_account varchar(255),
        source_account varchar(255),
        transaction_id varchar(255),
        primary key (id)
    )
Hibernate:
    create index idx_transaction_id
       on transactions (transaction_id)
Hibernate:
    create index idx_source_account
       on transactions (source_account)
Hibernate:
    create index idx_destination_account
       on transactions (destination_account)
Hibernate:
    create index idx_timestamp
       on transactions (timestamp)
2025-09-05 21:19:13.207 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-05 21:19:16.598 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-09-05 21:19:20.017 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-09-05 21:19:20.223 [main] INFO  c.s.b.s.TransactionRecoveryServiceTest - Started TransactionRecoveryServiceTest in 21.735 seconds (process running for 31.745)
2025-09-05 21:19:20.262 [scheduling-1] DEBUG c.s.b.s.TransactionRecoveryService - Starting periodic transaction recovery process
OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
2025-09-05 21:19:22.061 [scheduling-1] DEBUG c.s.b.s.TransactionRecoveryService - Transaction recovery completed. No stale transactions found
2025-09-05 21:19:22.212 [main] DEBUG c.s.b.s.TransactionRecoveryService - No transaction keys found for recovery
2025-09-05 21:19:22.309 [main] DEBUG c.s.b.s.TransactionRecoveryService - Transaction recovery completed. No stale transactions found
2025-09-05 21:19:22.444 [main] INFO  c.s.b.s.TransactionRecoveryService - Recovered stale transaction: STALE_001
2025-09-05 21:19:22.483 [main] INFO  c.s.b.s.TransactionRecoveryService - Cleaned up transaction without start time: transaction:idempotent:NO_TIME_001
2025-09-05 21:19:22.487 [main] INFO  c.s.b.s.TransactionRecoveryService - Transaction recovery completed. Recovered 2 stale transactions
2025-09-05 21:19:22.547 [main] DEBUG c.s.b.s.TransactionRecoveryService - Starting periodic transaction recovery process
2025-09-05 21:19:22.576 [main] INFO  c.s.b.s.TransactionRecoveryService - Recovered stale transaction: STALE_TX_PERIODIC_001
2025-09-05 21:19:22.577 [main] INFO  c.s.b.s.TransactionRecoveryService - Transaction recovery completed. Recovered 1 stale transactions
2025-09-05 21:19:22.815 [main] INFO  c.s.b.s.TransactionRecoveryService - Recovered stale transaction: STALE_TX_003
2025-09-05 21:19:22.838 [main] INFO  c.s.b.s.TransactionRecoveryService - Recovered stale transaction: STALE_TX_001
2025-09-05 21:19:22.875 [main] INFO  c.s.b.s.TransactionRecoveryService - Recovered stale transaction: STALE_TX_002
2025-09-05 21:19:22.875 [main] INFO  c.s.b.s.TransactionRecoveryService - Transaction recovery completed. Recovered 3 stale transactions
2025-09-05 21:19:22.960 [main] WARN  c.s.b.s.TransactionRecoveryService - Error parsing start time for key: transaction:idempotent:INVALID_TIME_TX_001
java.time.format.DateTimeParseException: Text 'invalid-time-format' could not be parsed at index 0
	at java.base/java.time.format.DateTimeFormatter.parseResolved0(DateTimeFormatter.java:2052)
	at java.base/java.time.format.DateTimeFormatter.parse(DateTimeFormatter.java:1954)
	at java.base/java.time.LocalDateTime.parse(LocalDateTime.java:494)
	at java.base/java.time.LocalDateTime.parse(LocalDateTime.java:479)
	at com.sacred.balance.service.TransactionRecoveryService.recoverStaleTransactions(TransactionRecoveryService.java:58)
	at com.sacred.balance.service.TransactionRecoveryServiceTest.shouldHandleInvalidStartTimeFormat(TransactionRecoveryServiceTest.java:145)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
2025-09-05 21:19:22.967 [main] DEBUG c.s.b.s.TransactionRecoveryService - Transaction recovery completed. No stale transactions found
2025-09-05 21:19:23.069 [main] INFO  c.s.b.s.TransactionRecoveryService - Cleaned up transaction without start time: transaction:idempotent:NO_START_TIME_TX_001
2025-09-05 21:19:23.070 [main] INFO  c.s.b.s.TransactionRecoveryService - Transaction recovery completed. Recovered 1 stale transactions
2025-09-05 21:19:23.247 [main] DEBUG c.s.b.s.TransactionRecoveryService - Transaction recovery completed. No stale transactions found
2025-09-05 21:19:23.445 [main] INFO  c.s.b.s.TransactionRecoveryService - Recovered stale transaction: STALE_TX_001
2025-09-05 21:19:23.446 [main] INFO  c.s.b.s.TransactionRecoveryService - Transaction recovery completed. Recovered 1 stale transactions
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 30.16 s -- in com.sacred.balance.service.TransactionRecoveryServiceTest
[INFO] Running com.sacred.balance.service.AccountServiceTest
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:24.030 [main] WARN  c.s.balance.service.AccountService - Account not found for balance update: NON_EXISTENT
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
2025-09-05 21:19:24.246 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: NON_EXISTENT
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
2025-09-05 21:19:24.567 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A005
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:24.658 [main] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A005, Old Balance: 400.0, Amount: 100.0, New Balance: 500.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:24.893 [pool-4-thread-1] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A008, Old Balance: 200.0, Amount: 5.0, New Balance: 205.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:24.903 [pool-4-thread-3] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A008, Old Balance: 205.0, Amount: 5.0, New Balance: 210.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:24.912 [pool-4-thread-2] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A008, Old Balance: 205.0, Amount: 5.0, New Balance: 210.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:24.932 [pool-4-thread-4] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A008, Old Balance: 210.0, Amount: 5.0, New Balance: 215.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:24.962 [pool-4-thread-5] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A008, Old Balance: 215.0, Amount: 5.0, New Balance: 220.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:24.985 [pool-4-thread-6] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A008, Old Balance: 220.0, Amount: 5.0, New Balance: 225.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.052 [pool-4-thread-7] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A008, Old Balance: 220.0, Amount: 5.0, New Balance: 225.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.080 [pool-4-thread-9] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A008, Old Balance: 225.0, Amount: 5.0, New Balance: 230.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.096 [pool-4-thread-8] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A008, Old Balance: 230.0, Amount: 5.0, New Balance: 235.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.108 [pool-4-thread-10] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A008, Old Balance: 235.0, Amount: 5.0, New Balance: 240.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.118 [pool-4-thread-11] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A008, Old Balance: 240.0, Amount: 5.0, New Balance: 245.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.130 [pool-4-thread-12] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A008, Old Balance: 240.0, Amount: 5.0, New Balance: 245.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.147 [pool-4-thread-13] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A008, Old Balance: 245.0, Amount: 5.0, New Balance: 250.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.166 [pool-4-thread-14] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A008, Old Balance: 250.0, Amount: 5.0, New Balance: 255.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.199 [pool-4-thread-15] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A008, Old Balance: 255.0, Amount: 5.0, New Balance: 260.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.317 [main] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A002, Old Balance: 200.0, Amount: 50.0, New Balance: 250.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.361 [pool-5-thread-1] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A007, Old Balance: 1000.0, Amount: 1.0, New Balance: 1001.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.371 [pool-5-thread-2] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A007, Old Balance: 1001.0, Amount: 1.0, New Balance: 1002.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.380 [pool-5-thread-3] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A007, Old Balance: 1002.0, Amount: 1.0, New Balance: 1003.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.387 [pool-5-thread-4] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A007, Old Balance: 1003.0, Amount: 1.0, New Balance: 1004.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.395 [pool-5-thread-5] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A007, Old Balance: 1004.0, Amount: 1.0, New Balance: 1005.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.401 [pool-5-thread-6] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A007, Old Balance: 1005.0, Amount: 1.0, New Balance: 1006.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.414 [pool-5-thread-7] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A007, Old Balance: 1006.0, Amount: 1.0, New Balance: 1007.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.426 [pool-5-thread-8] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A007, Old Balance: 1007.0, Amount: 1.0, New Balance: 1008.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.434 [pool-5-thread-9] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A007, Old Balance: 1007.0, Amount: 1.0, New Balance: 1008.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.444 [pool-5-thread-10] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A007, Old Balance: 1008.0, Amount: 1.0, New Balance: 1009.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.462 [pool-5-thread-15] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A007, Old Balance: 1009.0, Amount: 1.0, New Balance: 1010.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.484 [pool-5-thread-12] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A007, Old Balance: 1010.0, Amount: 1.0, New Balance: 1011.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.502 [pool-5-thread-13] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A007, Old Balance: 1011.0, Amount: 1.0, New Balance: 1012.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.534 [pool-5-thread-14] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A007, Old Balance: 1012.0, Amount: 1.0, New Balance: 1013.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.569 [pool-5-thread-16] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A007, Old Balance: 1013.0, Amount: 1.0, New Balance: 1014.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.583 [pool-5-thread-17] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A007, Old Balance: 1014.0, Amount: 1.0, New Balance: 1015.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.591 [pool-5-thread-18] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A007, Old Balance: 1015.0, Amount: 1.0, New Balance: 1016.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.599 [pool-5-thread-19] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A007, Old Balance: 1016.0, Amount: 1.0, New Balance: 1017.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.608 [pool-5-thread-20] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A007, Old Balance: 1017.0, Amount: 1.0, New Balance: 1018.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:25.617 [pool-5-thread-11] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A007, Old Balance: 1018.0, Amount: 1.0, New Balance: 1019.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
2025-09-05 21:19:25.661 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A001
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
2025-09-05 21:19:25.713 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A004
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.261 s -- in com.sacred.balance.service.AccountServiceTest
[INFO] Running com.sacred.balance.service.TransactionServiceTest
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    select
        t1_0.id,
        t1_0.amount,
        t1_0.destination_account,
        t1_0.source_account,
        t1_0.timestamp,
        t1_0.transaction_id
    from
        transactions t1_0
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
2025-09-05 21:19:25.948 [main] WARN  c.s.b.service.TransactionService - Transaction processing timeout, resetting state: T014
2025-09-05 21:19:26.045 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A016
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:26.083 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A017
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:26.104 [main] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A016, Old Balance: 100.0, Amount: -50.0, New Balance: 50.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:26.120 [main] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A017, Old Balance: 0.0, Amount: 50.0, New Balance: 50.0
Hibernate:
    insert
    into
        transactions
        (amount, destination_account, source_account, timestamp, transaction_id)
    values
        (?, ?, ?, ?, ?)
2025-09-05 21:19:26.127 [main] INFO  c.s.b.service.TransactionService - Transaction processed successfully. Transaction ID: T014
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    select
        t1_0.id,
        t1_0.amount,
        t1_0.destination_account,
        t1_0.source_account,
        t1_0.timestamp,
        t1_0.transaction_id
    from
        transactions t1_0
Hibernate:
    delete
    from
        transactions
    where
        id=?
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
2025-09-05 21:19:26.220 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A001
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:26.238 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A002
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:26.249 [main] WARN  c.s.b.service.TransactionService - Insufficient balance for account: A001, balance: 30.0, amount: 50.0
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    select
        t1_0.id,
        t1_0.amount,
        t1_0.destination_account,
        t1_0.source_account,
        t1_0.timestamp,
        t1_0.transaction_id
    from
        transactions t1_0
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
2025-09-05 21:19:26.430 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A018
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:26.442 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A019
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:26.460 [main] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A018, Old Balance: 100.0, Amount: -30.0, New Balance: 70.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:26.471 [main] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A019, Old Balance: 0.0, Amount: 30.0, New Balance: 30.0
Hibernate:
    insert
    into
        transactions
        (amount, destination_account, source_account, timestamp, transaction_id)
    values
        (?, ?, ?, ?, ?)
2025-09-05 21:19:26.481 [main] INFO  c.s.b.service.TransactionService - Transaction processed successfully. Transaction ID: f4793c35-5c3d-49ca-bcd7-e928691e89b7
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    select
        t1_0.id,
        t1_0.amount,
        t1_0.destination_account,
        t1_0.source_account,
        t1_0.timestamp,
        t1_0.transaction_id
    from
        transactions t1_0
Hibernate:
    delete
    from
        transactions
    where
        id=?
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
2025-09-05 21:19:26.658 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A008
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:26.669 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A009
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:26.743 [main] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A008, Old Balance: 300.0, Amount: -50.0, New Balance: 250.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:26.811 [main] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A009, Old Balance: 100.0, Amount: 50.0, New Balance: 150.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    insert
    into
        transactions
        (amount, destination_account, source_account, timestamp, transaction_id)
    values
        (?, ?, ?, ?, ?)
2025-09-05 21:19:26.817 [main] INFO  c.s.b.service.TransactionService - Transaction processed successfully. Transaction ID: T006
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:26.876 [main] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A008, Old Balance: 250.0, Amount: -100.0, New Balance: 150.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:26.938 [main] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A009, Old Balance: 150.0, Amount: 100.0, New Balance: 250.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    insert
    into
        transactions
        (amount, destination_account, source_account, timestamp, transaction_id)
    values
        (?, ?, ?, ?, ?)
2025-09-05 21:19:26.971 [main] INFO  c.s.b.service.TransactionService - Transaction processed successfully. Transaction ID: T007
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:27.070 [main] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A008, Old Balance: 150.0, Amount: -150.0, New Balance: 0.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:27.114 [main] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A009, Old Balance: 250.0, Amount: 150.0, New Balance: 400.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    insert
    into
        transactions
        (amount, destination_account, source_account, timestamp, transaction_id)
    values
        (?, ?, ?, ?, ?)
2025-09-05 21:19:27.119 [main] INFO  c.s.b.service.TransactionService - Transaction processed successfully. Transaction ID: T008
2025-09-05 21:19:27.141 [main] INFO  c.s.b.service.TransactionService - Batch processing completed. Total: 3, Success: 3, Failed: 0
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    select
        t1_0.id,
        t1_0.amount,
        t1_0.destination_account,
        t1_0.source_account,
        t1_0.timestamp,
        t1_0.transaction_id
    from
        transactions t1_0
Hibernate:
    delete
    from
        transactions
    where
        id=?
Hibernate:
    delete
    from
        transactions
    where
        id=?
Hibernate:
    delete
    from
        transactions
    where
        id=?
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
2025-09-05 21:19:27.408 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A001
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:27.494 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A002
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:27.520 [main] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A001, Old Balance: 100.0, Amount: -50.0, New Balance: 50.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:27.530 [main] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A002, Old Balance: 0.0, Amount: 50.0, New Balance: 50.0
Hibernate:
    insert
    into
        transactions
        (amount, destination_account, source_account, timestamp, transaction_id)
    values
        (?, ?, ?, ?, ?)
2025-09-05 21:19:27.532 [main] INFO  c.s.b.service.TransactionService - Transaction processed successfully. Transaction ID: T001
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        count(*)
    from
        transactions t1_0
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    select
        t1_0.id,
        t1_0.amount,
        t1_0.destination_account,
        t1_0.source_account,
        t1_0.timestamp,
        t1_0.transaction_id
    from
        transactions t1_0
Hibernate:
    delete
    from
        transactions
    where
        id=?
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
2025-09-05 21:19:28.381 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A012
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:28.393 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A013
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:28.411 [main] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A012, Old Balance: 100.0, Amount: -30.0, New Balance: 70.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:28.418 [main] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A013, Old Balance: 50.0, Amount: 30.0, New Balance: 80.0
Hibernate:
    insert
    into
        transactions
        (amount, destination_account, source_account, timestamp, transaction_id)
    values
        (?, ?, ?, ?, ?)
2025-09-05 21:19:28.421 [main] INFO  c.s.b.service.TransactionService - Transaction processed successfully. Transaction ID: T012
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    select
        t1_0.id,
        t1_0.amount,
        t1_0.destination_account,
        t1_0.source_account,
        t1_0.timestamp,
        t1_0.transaction_id
    from
        transactions t1_0
Hibernate:
    delete
    from
        transactions
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
Hibernate:
    select
        t1_0.id,
        t1_0.amount,
        t1_0.destination_account,
        t1_0.source_account,
        t1_0.timestamp,
        t1_0.transaction_id
    from
        transactions t1_0
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
Hibernate:
    select
        t1_0.id,
        t1_0.amount,
        t1_0.destination_account,
        t1_0.source_account,
        t1_0.timestamp,
        t1_0.transaction_id
    from
        transactions t1_0
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
2025-09-05 21:19:28.670 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A001
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:28.681 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A002
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:28.688 [main] WARN  c.s.b.service.TransactionService - Source account not found: A001
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    select
        t1_0.id,
        t1_0.amount,
        t1_0.destination_account,
        t1_0.source_account,
        t1_0.timestamp,
        t1_0.transaction_id
    from
        transactions t1_0
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
2025-09-05 21:19:28.738 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A003
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:28.754 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A004
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:28.767 [main] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A003, Old Balance: 200.0, Amount: -50.0, New Balance: 150.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:28.777 [main] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A004, Old Balance: 100.0, Amount: 50.0, New Balance: 150.0
Hibernate:
    insert
    into
        transactions
        (amount, destination_account, source_account, timestamp, transaction_id)
    values
        (?, ?, ?, ?, ?)
2025-09-05 21:19:28.780 [main] INFO  c.s.b.service.TransactionService - Transaction processed successfully. Transaction ID: T002
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
2025-09-05 21:19:28.800 [main] INFO  c.s.b.service.TransactionService - Transaction already processed: T002
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    select
        t1_0.id,
        t1_0.amount,
        t1_0.destination_account,
        t1_0.source_account,
        t1_0.timestamp,
        t1_0.transaction_id
    from
        transactions t1_0
Hibernate:
    delete
    from
        transactions
    where
        id=?
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
2025-09-05 21:19:28.974 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A014
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:28.986 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A015
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:29.012 [main] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A014, Old Balance: 200.0, Amount: -50.0, New Balance: 150.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:29.020 [main] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A015, Old Balance: 100.0, Amount: 50.0, New Balance: 150.0
Hibernate:
    insert
    into
        transactions
        (amount, destination_account, source_account, timestamp, transaction_id)
    values
        (?, ?, ?, ?, ?)
2025-09-05 21:19:29.024 [main] INFO  c.s.b.service.TransactionService - Transaction processed successfully. Transaction ID: T013
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        t1_0.id,
        t1_0.amount,
        t1_0.destination_account,
        t1_0.source_account,
        t1_0.timestamp,
        t1_0.transaction_id
    from
        transactions t1_0
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    select
        t1_0.id,
        t1_0.amount,
        t1_0.destination_account,
        t1_0.source_account,
        t1_0.timestamp,
        t1_0.transaction_id
    from
        transactions t1_0
Hibernate:
    delete
    from
        transactions
    where
        id=?
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
2025-09-05 21:19:29.100 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A010
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:29.111 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A011
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:29.129 [main] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A010, Old Balance: 100.0, Amount: -30.0, New Balance: 70.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:29.202 [main] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A011, Old Balance: 50.0, Amount: 30.0, New Balance: 80.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    insert
    into
        transactions
        (amount, destination_account, source_account, timestamp, transaction_id)
    values
        (?, ?, ?, ?, ?)
2025-09-05 21:19:29.253 [main] INFO  c.s.b.service.TransactionService - Transaction processed successfully. Transaction ID: T009
2025-09-05 21:19:29.313 [main] WARN  c.s.b.service.TransactionService - Insufficient balance for account: A010, balance: 70.0, amount: 80.0
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:29.358 [main] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A010, Old Balance: 70.0, Amount: -20.0, New Balance: 50.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:29.369 [main] INFO  c.s.balance.service.AccountService - Account balance updated. Account: A011, Old Balance: 80.0, Amount: 20.0, New Balance: 100.0
Hibernate:
    update
        accounts
    set
        account_number=?,
        balance=?
    where
        id=?
Hibernate:
    insert
    into
        transactions
        (amount, destination_account, source_account, timestamp, transaction_id)
    values
        (?, ?, ?, ?, ?)
2025-09-05 21:19:29.372 [main] INFO  c.s.b.service.TransactionService - Transaction processed successfully. Transaction ID: T011
2025-09-05 21:19:29.385 [main] INFO  c.s.b.service.TransactionService - Batch processing completed. Total: 3, Success: 2, Failed: 1
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    delete
    from
        accounts
    where
        id=?
Hibernate:
    select
        t1_0.id,
        t1_0.amount,
        t1_0.destination_account,
        t1_0.source_account,
        t1_0.timestamp,
        t1_0.transaction_id
    from
        transactions t1_0
Hibernate:
    delete
    from
        transactions
    where
        id=?
Hibernate:
    delete
    from
        transactions
    where
        id=?
Hibernate:
    insert
    into
        accounts
        (account_number, balance)
    values
        (?, ?)
2025-09-05 21:19:29.585 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A001
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:29.598 [main] DEBUG c.s.balance.service.AccountService - Finding account by account number: A002
Hibernate:
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.balance
    from
        accounts a1_0
    where
        a1_0.account_number=?
2025-09-05 21:19:29.604 [main] WARN  c.s.b.service.TransactionService - Destination account not found: A002
[INFO] Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.874 s -- in com.sacred.balance.service.TransactionServiceTest
[INFO]
[INFO] Results:
[INFO]
[INFO] Tests run: 30, Failures: 0, Errors: 0, Skipped: 0
[INFO]
[INFO]
[INFO] --- jacoco:0.8.7:report (report) @ balance-system ---
[INFO] Loading execution data file /Users/wengxk/Documents/springboot/real-time-balance-calculation/target/jacoco.exec
[INFO] Analyzed bundle 'balance-system' with 15 classes
[INFO]
[INFO] --- jacoco:0.8.7:report (default-cli) @ balance-system ---
[INFO] Loading execution data file /Users/wengxk/Documents/springboot/real-time-balance-calculation/target/jacoco.exec
[INFO] Analyzed bundle 'balance-system' with 15 classes
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  48.601 s
[INFO] Finished at: 2025-09-05T21:19:32+08:00
[INFO] ------------------------------------------------------------------------

Process finished with exit code 0
