# Default values for balance-calculation.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2 

image:
  repository: ecr-repo/balance-calculation 
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: "balance-calculation"
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: "nginx"
  annotations: 
    kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: "" 
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 1000m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

readinessProbe:
  httpGet:
    path: /actuator/health/readiness
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10 

livenessProbe:
  httpGet:
    path: /actuator/health/liveness
    port: http
  initialDelaySeconds: 60
  periodSeconds: 5

autoscaling:
  enabled: true 
  minReplicas: 2 
  maxReplicas: 20 
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

env:
  - name: TZ
    value: Asia/Shang_Hai
  - name: SERVER_PORT
    value: '8080'
  - name: SERVER_SHUTDOWN
    value: graceful
  - name: SPRING_LIFECYCLE_TIMEOUT-PER-SHUTDOWN-PHASE
    value: 25s
  - name: SPRING_JPA_HIBERNATE_DDL-AUTO
    value: validate
  - name: SPRING_DATASOURCE_DRIVER-CLASS-NAME
    value: org.postgresql.Driver
  - name: SPRING_DATASOURCE_URL
    value: jdbc:postgresql://postgres_server:5432/balance_db
  - name: SPRING_DATASOURCE_USERNAME
    value: changeit 
  - name: SPRING_DATASOURCE_PASSWORD
    value: changeit
  - name: SPRING_REDIS_HOST
    value: redis_server
  - name: SPRING_REDIS_PORT
    value: '6379'

nodeSelector: {}

tolerations: []

affinity: 
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpresions:
            - key: app.kubernetes.io/name
              operator: In
              values: balance-calculation
        topologyKey: failure-domain.beta.kubernates.io/zone

 
